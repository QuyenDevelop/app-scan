import { ShipmentImages } from "@models";
import { Icon, translate } from "@shared";
import { Metrics, Themes } from "@themes";
import React, { FunctionComponent } from "react";
import { FlatList, Image, Text, TouchableOpacity, View } from "react-native";
import styles from "../styles";

export interface Props {
  showPhotoModal: () => void;
  images: Array<ShipmentImages> | [];
  onViewImage: () => void;
}

export const ShipmentPhotoList: FunctionComponent<Props> = (props: Props) => {
  const { showPhotoModal, images, onViewImage } = props;
  // const [images] = useState<Array<ShipmentImages>>(
  //   shipment && shipment.Images ? shipment.Images.slice(0, 5) : [],
  // );
  // const images = shipment ? shipment.Images.slice(0, 5) : [];
  console.log(JSON.stringify(images));
  const renderImageItem = ({ item }: { item: ShipmentImages }) => {
    return (
      <>
        <TouchableOpacity style={styles.ImageButton} onPress={onViewImage}>
          <Image
            source={{
              // uri: "http://cdn.efex.asia/image/03f90669-14c7-49db-91dd-78cfae0b47e8/2021/5/6/20210506022758.png",
              uri: item.Url,
            }}
            style={styles.images}
            resizeMode="cover"
          />
        </TouchableOpacity>
      </>
    );
  };

  return (
    <View style={[styles.subShipmentContainer]}>
      <View style={styles.boxLstImage}>
        {images && images.length ? (
          <>
            <FlatList
              horizontal={true}
              showsHorizontalScrollIndicator={false}
              data={images}
              keyExtractor={index => {
                return index.toString();
              }}
              renderItem={renderImageItem}
            />
          </>
        ) : (
          <Text style={styles.labelInfo}>
            {translate("button.shipmentImages")}
          </Text>
        )}
      </View>
      <View style={styles.boxTakePhoto}>
        <TouchableOpacity hitSlop={styles.hitSlop} onPress={showPhotoModal}>
          <Icon
            name="ic_camera_fill"
            size={Metrics.icons.large}
            color={Themes.colors.brand60}
          />
        </TouchableOpacity>
      </View>
    </View>
  );
};
